// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/servers/rest_server.go

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProfileController is a mock of ProfileController interface.
type MockProfileController struct {
	ctrl     *gomock.Controller
	recorder *MockProfileControllerMockRecorder
}

// MockProfileControllerMockRecorder is the mock recorder for MockProfileController.
type MockProfileControllerMockRecorder struct {
	mock *MockProfileController
}

// NewMockProfileController creates a new mock instance.
func NewMockProfileController(ctrl *gomock.Controller) *MockProfileController {
	mock := &MockProfileController{ctrl: ctrl}
	mock.recorder = &MockProfileControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileController) EXPECT() *MockProfileControllerMockRecorder {
	return m.recorder
}

// GetProfiles mocks base method.
func (m *MockProfileController) GetProfiles(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetProfiles", arg0, arg1)
}

// GetProfiles indicates an expected call of GetProfiles.
func (mr *MockProfileControllerMockRecorder) GetProfiles(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfiles", reflect.TypeOf((*MockProfileController)(nil).GetProfiles), arg0, arg1)
}

// SaveProfile mocks base method.
func (m *MockProfileController) SaveProfile(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveProfile", arg0, arg1)
}

// SaveProfile indicates an expected call of SaveProfile.
func (mr *MockProfileControllerMockRecorder) SaveProfile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveProfile", reflect.TypeOf((*MockProfileController)(nil).SaveProfile), arg0, arg1)
}

// MockAuthController is a mock of AuthController interface.
type MockAuthController struct {
	ctrl     *gomock.Controller
	recorder *MockAuthControllerMockRecorder
}

// MockAuthControllerMockRecorder is the mock recorder for MockAuthController.
type MockAuthControllerMockRecorder struct {
	mock *MockAuthController
}

// NewMockAuthController creates a new mock instance.
func NewMockAuthController(ctrl *gomock.Controller) *MockAuthController {
	mock := &MockAuthController{ctrl: ctrl}
	mock.recorder = &MockAuthControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthController) EXPECT() *MockAuthControllerMockRecorder {
	return m.recorder
}
